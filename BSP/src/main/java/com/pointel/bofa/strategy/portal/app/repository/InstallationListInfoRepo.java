package com.pointel.bofa.strategy.portal.app.repository;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.pointel.bofa.strategy.portal.app.dto.InstallationListInfo;

@Repository
public interface InstallationListInfoRepo extends JpaRepository<InstallationListInfo,Integer>{
	
	@Query(value = "select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
			+ "installs.install_status_id, installs.install_type,\r\n"
			+ "users.displayname, install_statuses.install_status_desc,\r\n"
			+ "install_types.install_type_desc,\r\n"
			+ "nvl(i.totallinked,0) as totallinked,\r\n"
			+ "status.status_desc\r\n"
			+ "from installs\r\n"
			+ "inner join users on installs.install_owner = users.userid\r\n"
			+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
			+ "inner join status on installs.install_status_id = status.status_id\r\n"
			+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
			+ "left join(\r\n"
			+ "select strat_to_install.install_id,\r\n"
			+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
			+ "group by strat_to_install.install_id\r\n"
			+ ")i on installs.install_id = i.install_id)kk order by ?#{#pageable}",  countQuery = "SELECT count(*) FROM (select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
					+ "installs.install_status_id, installs.install_type,\r\n"
					+ "users.displayname, install_statuses.install_status_desc,\r\n"
					+ "install_types.install_type_desc,\r\n"
					+ "nvl(i.totallinked,0) as totallinked,\r\n"
					+ "status.status_desc\r\n"
					+ "from installs\r\n"
					+ "inner join users on installs.install_owner = users.userid\r\n"
					+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
					+ "inner join status on installs.install_status_id = status.status_id\r\n"
					+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
					+ "left join(\r\n"
					+ "select strat_to_install.install_id,\r\n"
					+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
					+ "group by strat_to_install.install_id\r\n"
					+ ")i on installs.install_id = i.install_id)kk) countObj",nativeQuery = true)
	public Page<InstallationListInfo> getInstallationListInfo(Pageable pageable);
	
	//Install_id
	@Query(value = "select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
			+ "installs.install_status_id, installs.install_type,\r\n"
			+ "users.displayname, install_statuses.install_status_desc,\r\n"
			+ "install_types.install_type_desc,\r\n"
			+ "nvl(i.totallinked,0) as totallinked,\r\n"
			+ "status.status_desc\r\n"
			+ "from installs\r\n"
			+ "inner join users on installs.install_owner = users.userid\r\n"
			+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
			+ "inner join status on installs.install_status_id = status.status_id\r\n"
			+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
			+ "left join(\r\n"
			+ "select strat_to_install.install_id,\r\n"
			+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
			+ "group by strat_to_install.install_id\r\n"
			+ ")i on installs.install_id = i.install_id)kk order by install_id desc,?#{#pageable}",  countQuery = "select count(*) from(select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
					+ "installs.install_status_id, installs.install_type,\r\n"
					+ "users.displayname, install_statuses.install_status_desc,\r\n"
					+ "install_types.install_type_desc,\r\n"
					+ "nvl(i.totallinked,0) as totallinked,\r\n"
					+ "status.status_desc\r\n"
					+ "from installs\r\n"
					+ "inner join users on installs.install_owner = users.userid\r\n"
					+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
					+ "inner join status on installs.install_status_id = status.status_id\r\n"
					+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
					+ "left join(\r\n"
					+ "select strat_to_install.install_id,\r\n"
					+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
					+ "group by strat_to_install.install_id\r\n"
					+ ")i on installs.install_id = i.install_id)kk order by install_id desc) countObj",nativeQuery = true)
	public Page<InstallationListInfo> getInstallationListInstallIdDesc(Pageable pageable);
	
	//Install_title
	@Query(value = "select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
			+ "installs.install_status_id, installs.install_type,\r\n"
			+ "users.displayname, install_statuses.install_status_desc,\r\n"
			+ "install_types.install_type_desc,\r\n"
			+ "nvl(i.totallinked,0) as totallinked,\r\n"
			+ "status.status_desc\r\n"
			+ "from installs\r\n"
			+ "inner join users on installs.install_owner = users.userid\r\n"
			+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
			+ "inner join status on installs.install_status_id = status.status_id\r\n"
			+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
			+ "left join(\r\n"
			+ "select strat_to_install.install_id,\r\n"
			+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
			+ "group by strat_to_install.install_id\r\n"
			+ ")i on installs.install_id = i.install_id)kk order by install_title desc,?#{#pageable}",  countQuery = "select count(*) from(select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
					+ "installs.install_status_id, installs.install_type,\r\n"
					+ "users.displayname, install_statuses.install_status_desc,\r\n"
					+ "install_types.install_type_desc,\r\n"
					+ "nvl(i.totallinked,0) as totallinked,\r\n"
					+ "status.status_desc\r\n"
					+ "from installs\r\n"
					+ "inner join users on installs.install_owner = users.userid\r\n"
					+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
					+ "inner join status on installs.install_status_id = status.status_id\r\n"
					+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
					+ "left join(\r\n"
					+ "select strat_to_install.install_id,\r\n"
					+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
					+ "group by strat_to_install.install_id\r\n"
					+ ")i on installs.install_id = i.install_id)kk order by install_id desc) countObj",nativeQuery = true)
	public Page<InstallationListInfo> getInstallationListInstallTitleDesc(Pageable pageable);
		
	//Install_Date
	@Query(value = "select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
			+ "installs.install_status_id, installs.install_type,\r\n"
			+ "users.displayname, install_statuses.install_status_desc,\r\n"
			+ "install_types.install_type_desc,\r\n"
			+ "nvl(i.totallinked,0) as totallinked,\r\n"
			+ "status.status_desc\r\n"
			+ "from installs\r\n"
			+ "inner join users on installs.install_owner = users.userid\r\n"
			+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
			+ "inner join status on installs.install_status_id = status.status_id\r\n"
			+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
			+ "left join(\r\n"
			+ "select strat_to_install.install_id,\r\n"
			+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
			+ "group by strat_to_install.install_id\r\n"
			+ ")i on installs.install_id = i.install_id)kk order by install_Date desc,?#{#pageable}",  countQuery = "select count(*) from(select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
					+ "installs.install_status_id, installs.install_type,\r\n"
					+ "users.displayname, install_statuses.install_status_desc,\r\n"
					+ "install_types.install_type_desc,\r\n"
					+ "nvl(i.totallinked,0) as totallinked,\r\n"
					+ "status.status_desc\r\n"
					+ "from installs\r\n"
					+ "inner join users on installs.install_owner = users.userid\r\n"
					+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
					+ "inner join status on installs.install_status_id = status.status_id\r\n"
					+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
					+ "left join(\r\n"
					+ "select strat_to_install.install_id,\r\n"
					+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
					+ "group by strat_to_install.install_id\r\n"
					+ ")i on installs.install_id = i.install_id)kk order by install_id desc) countObj",nativeQuery = true)
	public Page<InstallationListInfo> getInstallationListInstallDateDesc(Pageable pageable);
	
	//Install_Status_Id
	@Query(value = "select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
			+ "installs.install_status_id, installs.install_type,\r\n"
			+ "users.displayname, install_statuses.install_status_desc,\r\n"
			+ "install_types.install_type_desc,\r\n"
			+ "nvl(i.totallinked,0) as totallinked,\r\n"
			+ "status.status_desc\r\n"
			+ "from installs\r\n"
			+ "inner join users on installs.install_owner = users.userid\r\n"
			+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
			+ "inner join status on installs.install_status_id = status.status_id\r\n"
			+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
			+ "left join(\r\n"
			+ "select strat_to_install.install_id,\r\n"
			+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
			+ "group by strat_to_install.install_id\r\n"
			+ ")i on installs.install_id = i.install_id)kk order by install_status_id desc,?#{#pageable}",  countQuery = "select count(*) from(select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
					+ "installs.install_status_id, installs.install_type,\r\n"
					+ "users.displayname, install_statuses.install_status_desc,\r\n"
					+ "install_types.install_type_desc,\r\n"
					+ "nvl(i.totallinked,0) as totallinked,\r\n"
					+ "status.status_desc\r\n"
					+ "from installs\r\n"
					+ "inner join users on installs.install_owner = users.userid\r\n"
					+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
					+ "inner join status on installs.install_status_id = status.status_id\r\n"
					+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
					+ "left join(\r\n"
					+ "select strat_to_install.install_id,\r\n"
					+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
					+ "group by strat_to_install.install_id\r\n"
					+ ")i on installs.install_id = i.install_id)kk order by install_id desc) countObj",nativeQuery = true)
	public Page<InstallationListInfo> getInstallationListInstallStatusIdDesc(Pageable pageable);
	
	//Install_Type
	@Query(value = "select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
			+ "installs.install_status_id, installs.install_type,\r\n"
			+ "users.displayname, install_statuses.install_status_desc,\r\n"
			+ "install_types.install_type_desc,\r\n"
			+ "nvl(i.totallinked,0) as totallinked,\r\n"
			+ "status.status_desc\r\n"
			+ "from installs\r\n"
			+ "inner join users on installs.install_owner = users.userid\r\n"
			+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
			+ "inner join status on installs.install_status_id = status.status_id\r\n"
			+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
			+ "left join(\r\n"
			+ "select strat_to_install.install_id,\r\n"
			+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
			+ "group by strat_to_install.install_id\r\n"
			+ ")i on installs.install_id = i.install_id)kk order by install_type desc,?#{#pageable}",  countQuery = "select count(*) from(select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
					+ "installs.install_status_id, installs.install_type,\r\n"
					+ "users.displayname, install_statuses.install_status_desc,\r\n"
					+ "install_types.install_type_desc,\r\n"
					+ "nvl(i.totallinked,0) as totallinked,\r\n"
					+ "status.status_desc\r\n"
					+ "from installs\r\n"
					+ "inner join users on installs.install_owner = users.userid\r\n"
					+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
					+ "inner join status on installs.install_status_id = status.status_id\r\n"
					+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
					+ "left join(\r\n"
					+ "select strat_to_install.install_id,\r\n"
					+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
					+ "group by strat_to_install.install_id\r\n"
					+ ")i on installs.install_id = i.install_id)kk order by install_id desc) countObj",nativeQuery = true)
	public Page<InstallationListInfo> getInstallationListInstallTypeDesc(Pageable pageable);
	
	//DisplayName
	@Query(value = "select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
			+ "installs.install_status_id, installs.install_type,\r\n"
			+ "users.displayname, install_statuses.install_status_desc,\r\n"
			+ "install_types.install_type_desc,\r\n"
			+ "nvl(i.totallinked,0) as totallinked,\r\n"
			+ "status.status_desc\r\n"
			+ "from installs\r\n"
			+ "inner join users on installs.install_owner = users.userid\r\n"
			+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
			+ "inner join status on installs.install_status_id = status.status_id\r\n"
			+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
			+ "left join(\r\n"
			+ "select strat_to_install.install_id,\r\n"
			+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
			+ "group by strat_to_install.install_id\r\n"
			+ ")i on installs.install_id = i.install_id)kk order by displayname desc,?#{#pageable}",  countQuery = "select count(*) from(select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
					+ "installs.install_status_id, installs.install_type,\r\n"
					+ "users.displayname, install_statuses.install_status_desc,\r\n"
					+ "install_types.install_type_desc,\r\n"
					+ "nvl(i.totallinked,0) as totallinked,\r\n"
					+ "status.status_desc\r\n"
					+ "from installs\r\n"
					+ "inner join users on installs.install_owner = users.userid\r\n"
					+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
					+ "inner join status on installs.install_status_id = status.status_id\r\n"
					+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
					+ "left join(\r\n"
					+ "select strat_to_install.install_id,\r\n"
					+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
					+ "group by strat_to_install.install_id\r\n"
					+ ")i on installs.install_id = i.install_id)kk order by install_id desc) countObj",nativeQuery = true)
	public Page<InstallationListInfo> getInstallationListDisplayNameDesc(Pageable pageable);
	
	//Install_Status_Desc
	@Query(value = "select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
			+ "installs.install_status_id, installs.install_type,\r\n"
			+ "users.displayname, install_statuses.install_status_desc,\r\n"
			+ "install_types.install_type_desc,\r\n"
			+ "nvl(i.totallinked,0) as totallinked,\r\n"
			+ "status.status_desc\r\n"
			+ "from installs\r\n"
			+ "inner join users on installs.install_owner = users.userid\r\n"
			+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
			+ "inner join status on installs.install_status_id = status.status_id\r\n"
			+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
			+ "left join(\r\n"
			+ "select strat_to_install.install_id,\r\n"
			+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
			+ "group by strat_to_install.install_id\r\n"
			+ ")i on installs.install_id = i.install_id)kk order by install_status_desc desc,?#{#pageable}",  countQuery = "select count(*) from(select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
					+ "installs.install_status_id, installs.install_type,\r\n"
					+ "users.displayname, install_statuses.install_status_desc,\r\n"
					+ "install_types.install_type_desc,\r\n"
					+ "nvl(i.totallinked,0) as totallinked,\r\n"
					+ "status.status_desc\r\n"
					+ "from installs\r\n"
					+ "inner join users on installs.install_owner = users.userid\r\n"
					+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
					+ "inner join status on installs.install_status_id = status.status_id\r\n"
					+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
					+ "left join(\r\n"
					+ "select strat_to_install.install_id,\r\n"
					+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
					+ "group by strat_to_install.install_id\r\n"
					+ ")i on installs.install_id = i.install_id)kk order by install_id desc) countObj",nativeQuery = true)
	public Page<InstallationListInfo> getInstallationListInstallStatusDesc(Pageable pageable);
	
	//Install_Type_Desc
	@Query(value = "select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
			+ "installs.install_status_id, installs.install_type,\r\n"
			+ "users.displayname, install_statuses.install_status_desc,\r\n"
			+ "install_types.install_type_desc,\r\n"
			+ "nvl(i.totallinked,0) as totallinked,\r\n"
			+ "status.status_desc\r\n"
			+ "from installs\r\n"
			+ "inner join users on installs.install_owner = users.userid\r\n"
			+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
			+ "inner join status on installs.install_status_id = status.status_id\r\n"
			+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
			+ "left join(\r\n"
			+ "select strat_to_install.install_id,\r\n"
			+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
			+ "group by strat_to_install.install_id\r\n"
			+ ")i on installs.install_id = i.install_id)kk order by install_type_desc desc,?#{#pageable}",  countQuery = "select count(*) from(select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
					+ "installs.install_status_id, installs.install_type,\r\n"
					+ "users.displayname, install_statuses.install_status_desc,\r\n"
					+ "install_types.install_type_desc,\r\n"
					+ "nvl(i.totallinked,0) as totallinked,\r\n"
					+ "status.status_desc\r\n"
					+ "from installs\r\n"
					+ "inner join users on installs.install_owner = users.userid\r\n"
					+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
					+ "inner join status on installs.install_status_id = status.status_id\r\n"
					+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
					+ "left join(\r\n"
					+ "select strat_to_install.install_id,\r\n"
					+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
					+ "group by strat_to_install.install_id\r\n"
					+ ")i on installs.install_id = i.install_id)kk order by install_id desc) countObj",nativeQuery = true)
	public Page<InstallationListInfo> getInstallationListInstallTypeDescDesc(Pageable pageable);
	
	//Totallinked
	@Query(value = "select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
			+ "installs.install_status_id, installs.install_type,\r\n"
			+ "users.displayname, install_statuses.install_status_desc,\r\n"
			+ "install_types.install_type_desc,\r\n"
			+ "nvl(i.totallinked,0) as totallinked,\r\n"
			+ "status.status_desc\r\n"
			+ "from installs\r\n"
			+ "inner join users on installs.install_owner = users.userid\r\n"
			+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
			+ "inner join status on installs.install_status_id = status.status_id\r\n"
			+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
			+ "left join(\r\n"
			+ "select strat_to_install.install_id,\r\n"
			+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
			+ "group by strat_to_install.install_id\r\n"
			+ ")i on installs.install_id = i.install_id)kk order by totallinked desc,?#{#pageable}",  countQuery = "select count(*) from(select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
					+ "installs.install_status_id, installs.install_type,\r\n"
					+ "users.displayname, install_statuses.install_status_desc,\r\n"
					+ "install_types.install_type_desc,\r\n"
					+ "nvl(i.totallinked,0) as totallinked,\r\n"
					+ "status.status_desc\r\n"
					+ "from installs\r\n"
					+ "inner join users on installs.install_owner = users.userid\r\n"
					+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
					+ "inner join status on installs.install_status_id = status.status_id\r\n"
					+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
					+ "left join(\r\n"
					+ "select strat_to_install.install_id,\r\n"
					+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
					+ "group by strat_to_install.install_id\r\n"
					+ ")i on installs.install_id = i.install_id)kk order by install_id desc) countObj",nativeQuery = true)
	public Page<InstallationListInfo> getInstallationListTotallinkedDesc(Pageable pageable);
	
	//Totallinked
	@Query(value = "select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
			+ "installs.install_status_id, installs.install_type,\r\n"
			+ "users.displayname, install_statuses.install_status_desc,\r\n"
			+ "install_types.install_type_desc,\r\n"
			+ "nvl(i.totallinked,0) as totallinked,\r\n"
			+ "status.status_desc\r\n"
			+ "from installs\r\n"
			+ "inner join users on installs.install_owner = users.userid\r\n"
			+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
			+ "inner join status on installs.install_status_id = status.status_id\r\n"
			+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
			+ "left join(\r\n"
			+ "select strat_to_install.install_id,\r\n"
			+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
			+ "group by strat_to_install.install_id\r\n"
			+ ")i on installs.install_id = i.install_id)kk order by status_desc desc,?#{#pageable}",  countQuery = "select count(*) from(select * from( select installs.install_id,installs.install_title,to_char(installs.install_date,'mm/dd/yyyy') as install_date,\r\n"
					+ "installs.install_status_id, installs.install_type,\r\n"
					+ "users.displayname, install_statuses.install_status_desc,\r\n"
					+ "install_types.install_type_desc,\r\n"
					+ "nvl(i.totallinked,0) as totallinked,\r\n"
					+ "status.status_desc\r\n"
					+ "from installs\r\n"
					+ "inner join users on installs.install_owner = users.userid\r\n"
					+ "inner join install_statuses on installs.install_status_id = install_statuses.install_status_id\r\n"
					+ "inner join status on installs.install_status_id = status.status_id\r\n"
					+ "inner join install_types on installs.install_type = install_types.install_type\r\n"
					+ "left join(\r\n"
					+ "select strat_to_install.install_id,\r\n"
					+ "count(strat_to_install.strat_id) as totallinked from strat_to_install\r\n"
					+ "group by strat_to_install.install_id\r\n"
					+ ")i on installs.install_id = i.install_id)kk order by install_id desc) countObj",nativeQuery = true)
	public Page<InstallationListInfo> getInstallationListStatusDesc(Pageable pageable);
		
}
